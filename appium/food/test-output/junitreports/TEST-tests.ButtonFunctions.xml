<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="LAPTOP-JG0P5LIF" failures="0" tests="3" name="tests.ButtonFunctions" time="8.143" errors="1" timestamp="2024-09-21T15:35:15 IST" skipped="2">
  <testcase classname="tests.ButtonFunctions" name="testSignWithEmail" time="0.000">
    <skipped/>
  </testcase> <!-- testSignWithEmail -->
  <system-out/>
  <testcase classname="tests.ButtonFunctions" name="setUP" time="8.143">
    <error message="Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Cannot start the &#039;com.example.fooddelivery&#039; application. Consider checking the driver&#039;s troubleshooting documentation. Original error: Cannot start the &#039;com.example.fooddelivery&#039; application. Consider checking the driver&#039;s troubleshooting documentation. Original error: Activity name &#039;.com.example.fooddeliveryapp.MainMenu&#039; used to start the app doesn&#039;t exist or cannot be launched! Make sure it exists and is a launchable activity 
Host info: host: &#039;LAPTOP-JG0P5LIF&#039;, ip: &#039;192.168.94.135&#039;
Build info: version: &#039;4.12.1&#039;, revision: &#039;8e34639b11&#039;
System info: os.name: &#039;Windows 11&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;17.0.9&#039;
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{appium:appActivity=com.example.fooddeliveryapp.MainMenu, appium:appPackage=com.example.fooddelivery, appium:automationName=uiautomator2, appium:deviceName=motorola moto g54 5G, appium:noReset=true, platformName=ANDROID}], desiredCapabilities=Capabilities {appActivity: com.example.fooddeliveryapp..., appPackage: com.example.fooddelivery, automationName: uiautomator2, deviceName: motorola moto g54 5G, noReset: true, platformName: ANDROID}}]
Capabilities {appActivity: com.example.fooddeliveryapp..., appPackage: com.example.fooddelivery, automationName: uiautomator2, deviceName: motorola moto g54 5G, noReset: true, platformName: ANDROID}" type="org.openqa.selenium.SessionNotCreatedException">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Cannot start the 'com.example.fooddelivery' application. Consider checking the driver's troubleshooting documentation. Original error: Cannot start the 'com.example.fooddelivery' application. Consider checking the driver's troubleshooting documentation. Original error: Activity name '.com.example.fooddeliveryapp.MainMenu' used to start the app doesn't exist or cannot be launched! Make sure it exists and is a launchable activity 
Host info: host: 'LAPTOP-JG0P5LIF', ip: '192.168.94.135'
Build info: version: '4.12.1', revision: '8e34639b11'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{appium:appActivity=com.example.fooddeliveryapp.MainMenu, appium:appPackage=com.example.fooddelivery, appium:automationName=uiautomator2, appium:deviceName=motorola moto g54 5G, appium:noReset=true, platformName=ANDROID}], desiredCapabilities=Capabilities {appActivity: com.example.fooddeliveryapp..., appPackage: com.example.fooddelivery, automationName: uiautomator2, deviceName: motorola moto g54 5G, noReset: true, platformName: ANDROID}}]
Capabilities {appActivity: com.example.fooddeliveryapp..., appPackage: com.example.fooddelivery, automationName: uiautomator2, deviceName: motorola moto g54 5G, noReset: true, platformName: ANDROID}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:133)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:102)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:182)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:274)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:163)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:89)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:101)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:113)
at tests.ButtonFunctions.setUP(ButtonFunctions.java:41)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </error>
  </testcase> <!-- setUP -->
  <system-out/>
  <testcase classname="tests.ButtonFunctions" name="testSignPhn" time="0.000">
    <skipped/>
  </testcase> <!-- testSignPhn -->
  <system-out/>
</testsuite> <!-- tests.ButtonFunctions -->
